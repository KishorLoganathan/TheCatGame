using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;

public class LeaderboardManager : MonoBehaviour
{
    public TMP_InputField nameInputField; 
    public TMP_Text leaderboardText;
    public TMP_Text warningText; 

    private List<string> leaderboardEntries = new List<string>();
    private Timer timer;

    private void Start() {
        LoadLeaderboard();
        if (leaderboardText != null)
        {
            UpdateLeaderboardDisplay();
        }

        timer = FindObjectOfType<Timer>();
        leaderboardText.text = "Test Leaderboard Text\nRun 1: AAA - Time: 45.32s, Coins: 12";
    }

    public void SubmitScore() {
        if (nameInputField == null) {
            Debug.LogWarning("SubmitScore called but no input field is assigned.");
            return;
        }

        string playerName = nameInputField.text.ToUpper();

        if (playerName.Length != 3) {
            if (warningText != null)
            {
                warningText.text = "Name must be exactly 3 letters.";
            }
            Debug.LogWarning("Name must be exactly three characters.");
            return;
        }

        if (warningText != null)
        {
            warningText.text = "";
        }

        float time = timer != null ? timer.GetElapsedTime() : 0f;
        int coins = GameManager.Instance.coinCount;
 
        string entry = $"Run {leaderboardEntries.Count + 1}: {playerName} - Time: {time:F2}s, Coins: {coins}";
        leaderboardEntries.Add(entry);

        SaveLeaderboard();

        SceneTransitionManager.Instance.LoadScene("MainMenuScene");
    }

    private void UpdateLeaderboardDisplay() {
        Debug.Log("Updating leaderboard display...");
        if (leaderboardEntries.Count == 0) {
            leaderboardText.text = "No leaderboard entries";
            Debug.Log("No leaderboard entries to display.");
        } else {
            string leaderboardString = string.Join(System.Environment.NewLine, leaderboardEntries);
            leaderboardText.text = leaderboardString;
            Debug.Log($"Generated leaderboard string: {leaderboardString}");
            leaderboardText.text = leaderboardString;
            Debug.Log($"Displaying leaderboard: \n{leaderboardText.text}");
        }

        leaderboardText.text = "Run 1: JJJ - Time: 45.32s, Coins: 12\nRun 2: AAA - Time: 39.10s, Coins: 20";
        Debug.Log("Hardcoded leaderboard text applied.");
    }


    private void SaveLeaderboard() {
        PlayerPrefs.SetInt("LeaderboardCount", leaderboardEntries.Count);
        for (int i = 0; i < leaderboardEntries.Count; i++) {
            PlayerPrefs.SetString($"LeaderboardEntry_{i}", leaderboardEntries[i]);
        }

        Debug.Log("Leaderboard saved with " + leaderboardEntries.Count + " entries.");
    }

    private void LoadLeaderboard() {
        leaderboardEntries.Clear();
        int count = PlayerPrefs.GetInt("LeaderboardCount", 0);
        Debug.Log($"Loading leaderboard with {count} entries from PlayerPrefs.");
        for (int i = 0; i < count; i++) {
            string entry = PlayerPrefs.GetString($"LeaderboardEntry_{i}", "");
            Debug.Log($"Loaded Entry {i}: {entry}");
            leaderboardEntries.Add(entry);
        }

        Debug.Log("Leaderboard loaded with " + leaderboardEntries.Count + " entries.");
    }

    // This function was generated by ChatGPT
    [ContextMenu("Clear Leaderboard")]
    public void ClearLeaderboard() {
        PlayerPrefs.DeleteAll();
        leaderboardEntries.Clear();
        Debug.Log("Leaderboard cleared.");
    }

}
