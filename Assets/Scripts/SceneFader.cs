using System.Collections;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class SceneFader : MonoBehaviour
{
    
    public static SceneFader Instance;
    public Image fadeImage; // Reference to the UI panel's Image component
    public float fadeDuration = 1f;

    void Start() {

        // Start the game with a fade-in
        StartCoroutine(FadeIn());

    }

    private void Awake() {
        if (Instance == null) {
            Instance = this;
            DontDestroyOnLoad(gameObject);
        } else {
            Destroy(gameObject);
        }
    }

    public void FadeToScene(string sceneName) {

        Debug.Log("Starting fade out to scene: " + sceneName);
        StartCoroutine(FadeOut(sceneName));

    }

    IEnumerator FadeIn() 
    {

        EnsureFadeImage();
        float elapsedTime = 0f;
        Color color = fadeImage.color;

        while (elapsedTime < fadeDuration) {

            elapsedTime += Time.deltaTime;
            color.a = Mathf.Clamp01(1f - (elapsedTime / fadeDuration));
            fadeImage.color = color;
            yield return null;

        }
    }

    IEnumerator FadeOut(string sceneName) {
        
        Debug.Log("FadeOut coroutine started.");
        EnsureFadeImage();

        float elapsedTime = 0f;
        Color color = fadeImage.color;

        while (elapsedTime < fadeDuration) {

            elapsedTime += Time.deltaTime;
            color.a = Mathf.Clamp01(elapsedTime / fadeDuration);
            fadeImage.color = color;
            yield return null;
            
        }

        // After fade out, load the new scene
        Debug.Log("FadeOut completed. Loading Scene: " + sceneName);
        SceneManager.LoadScene(sceneName);

        yield return new WaitForSeconds(0.1f);
        StartCoroutine(FadeIn());
    }

    // This was generated by ChatGPT
    private void EnsureFadeImage()
    {
        if (fadeImage == null)
        {
            Debug.LogWarning("FadeImage is missing. Attempting to recreate...");
            Canvas canvas = new GameObject("FadeCanvas").AddComponent<Canvas>();
            canvas.renderMode = RenderMode.ScreenSpaceOverlay;
            canvas.gameObject.AddComponent<CanvasScaler>();
            canvas.gameObject.AddComponent<GraphicRaycaster>();
            DontDestroyOnLoad(canvas.gameObject);

            fadeImage = new GameObject("FadeImage").AddComponent<Image>();
            fadeImage.transform.SetParent(canvas.transform, false);
            fadeImage.color = Color.black;
            RectTransform rect = fadeImage.GetComponent<RectTransform>();
            rect.anchorMin = Vector2.zero;
            rect.anchorMax = Vector2.one;
            rect.offsetMin = Vector2.zero;
            rect.offsetMax = Vector2.zero;
        }
    }

}
